# include:
  # - template: Security/SAST.gitlab-ci.yml
 
variables:
  # SAST_EXPERIMENTAL_STRING: "HELLO SAST"
  VERSION: 1.0.${CI_PIPELINE_ID}
  MAVEN_REPO_PATH: ${CI_PROJECT_DIR}/.m2/repository
  JAVA_OPTS: -XX:MaxRAMPercentage=90
 
stages:
  - build
  - release
  - deploy
  - notify

build-backend-code-job:
  # variables:
    # VERSION: 1.0.${CI_PIPELINE_ID}
    # MAVEN_REPO_PATH: ${CI_PROJECT_DIR}/.m2/repository
  stage: build
  variables:
    SPRING_FLYWAY_ENABLED: "false"  
  # only:
    # changes:
    # - backend/*/
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: [""]
  # переменные CI_REGISTRY_USER, CI_REGISTRY_PASSWORD, CI_REGISTRY генерятся Гитлабом, их задавать не надо
  script:
    - echo "start build backend"
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/backend"
      --dockerfile "${CI_PROJECT_DIR}/backend/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}/sausage-backend:$CI_COMMIT_SHA"
      --build-arg VERSION=$VERSION
      --cache=true

upload-backend:
  stage: release
  variables:
    GIT_STRATEGY: none
  image:
    name: gcr.io/go-containerregistry/crane:debug
    entrypoint: [ "" ]
  cache: [ ]
  before_script:
    - crane auth login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - crane tag $CI_REGISTRY_IMAGE/sausage-backend:$CI_COMMIT_SHA $VERSION

deploy-backend:
  stage: deploy
  image: alpine:3.18
  before_script:
    - apk add gettext openssh-client bash
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - envsubst < ./backend/deploy.sh | ssh -t -o StrictHostKeyChecking=no ${DEV_USER}@${DEV_HOST}
  rules: 
    - when: manual
    

telegram-notification-backend:
  stage: notify
  script:
    - |
      if [[ "$CI_COMMIT_MESSAGE" == *"send notification"* ]]; then
        message="Александр Гааг собрал Backend \nАртефакт доступен по [ссылке](${NEXUS_REPO_URL}/repository/${NEXUS_REPO_BACKEND_NAME}/com/yandex/practicum/devops/sausage-store/${VERSION}/sausage-store-${VERSION}.jar)"
        curl -X POST -H 'Content-type: application/json' \
        --data "{\"chat_id\": \"-1002138916913\", \"text\": \"$message\", \"parse_mode\": \"markdown\"}" \
        https://api.telegram.org/bot5933756043:AAE8JLL5KIzgrNBeTP5e-1bkbJy4YRoeGjs/sendMessage
      fi
  only:
    variables:
      - $CI_COMMIT_MESSAGE
      - $CI_PIPELINE_SOURCE
    # changes:
      # - backend/*
  needs:
    - job: build-backend-code-job
