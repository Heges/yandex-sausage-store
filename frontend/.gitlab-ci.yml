stages:
  - build
  - test
  - notify
  - release

build-frontend-code-job:
  stage: build
  cache:
    paths:
        # - .npm/ # для хранения зависимостей сборки фронтенда
        - frontend/dist/
  # only:
    # changes:
    # - frontend/*/
  script:        
    - cd frontend
    - npm install
    - npm run build
  artifacts:
    paths:
      - frontend/dist/frontend

telegram-notification-frontend:
  stage: notify
  script:
    - |
      if [[ "$CI_COMMIT_MESSAGE" == *"send notification"* ]]; then
        message="Александр Гааг собрал Frontend \nАртефакт доступен по [ссылке]($CI_PROJECT_URL/-/jobs/artifacts/${CI_COMMIT_REF_NAME}/download?job=build-frontend-code-job)"
        curl -X POST -H 'Content-type: application/json' \
        --data "{\"chat_id\": \"-1002138916913\", \"text\": \"$message\", \"parse_mode\": \"markdown\"}" \
        https://api.telegram.org/bot5933756043:AAE8JLL5KIzgrNBeTP5e-1bkbJy4YRoeGjs/sendMessage
      fi
  only:
    variables:
      - $CI_COMMIT_MESSAGE
      - $CI_PIPELINE_SOURCE
    # changes:
      # - frontend/*
  needs:
    - job: build-frontend-code-job

upload-frontend-release:
  stage: release
  # needs:
    # - sonarqube-frontend-sast
    # - gitlab-sast
    - job: build-frontend-code-job
  script:
    - |
      cd frontend/dist
      tar czvf sausage-store-$VERSION.tar.gz frontend
      echo "Загрузка файла в Nexus через curl:"
      echo "curl -u \"$NEXUS_REPO_USER:$NEXUS_REPO_PASS\" --upload-file \"sausage-store-$VERSION.tar.gz\" \"$NEXUS_REPO_URL/repository/$NEXUS_REPO_FRONTEND_NAME/$VERSION/sausage-store-$VERSION.tar.gz\" -X PUT"
      RESPONSE=$(curl -v -u "$NEXUS_REPO_USER:$NEXUS_REPO_PASS" --upload-file "sausage-store-$VERSION.tar.gz" "$NEXUS_REPO_URL/repository/$NEXUS_REPO_FRONTEND_NAME/$VERSION/sausage-store-$VERSION.tar.gz" -X PUT 2>&1)
      echo "Ответ от Nexus:"
      echo "$RESPONSE"
 